defaults:
  - hydra/job_logging: colorlog
  - hydra/hydra_logging: colorlog

workdir: ${store.workdir}
seed: 777
test: False

env:
  project_id:
  bucket_name:
  wandb_project:

feature:
  version: "001"
  remove_cols:
    [
      "session",
      "aid",
      "click_label",
      "cart_label",
      "order_label",
      "is_valid",
      "split",
      "ts_minute",
      "ts_hour",
      "ts_day",
      "fold",
    ]
  label_cols: ["click_label", "cart_label", "order_label"]
  cat_cols: []

lgbm:
  n_fold: 5
  feature_cols: [""] #関数内で書き換える
  cat_cols: ${feature.cat_cols}
  label_col: ${feature.label_col}
  pred_col:
  early_stopping_rounds: 200
  verbose_eval: 100
  params:
    num_iterations: 100000
    lambda_l1: 0.1
    lambda_l2: 0.1
    num_leaves: 32
    feature_fraction: 1.0
    bagging_fraction: 0.8
    bagging_freq: 1
    min_child_samples: 10
    task: train
    boosting_type: gbdt
    objective: lambdarank
    metric: ndcg
    max_depth: 8
    learning_rate: 0.01
    num_thread: -1
    max_bin: 256
    verbose: -1
    device: cpu
    scale_pos_weight: 1
    seed: ${seed}
    num_class: 1

xgb:
  feature_cols: [""] #関数内で書き換える
  cat_cols:
  label_col: "label"
  early_stopping_rounds: 200
  verbose_eval: 100
  params:
    alpha: 0.1
    reg_lambda: 0.1
    max_leaves: 16
    colsample_bytree: 1.0
    subsample: 0.8
    min_child_weight: 10
    booster: gbtree
    objective: binary:logistic
    eval_metric: auc
    max_depth: 6
    learning_rate: 0.01
    nthread: -1
    max_bin: 256
    tree_method: gpu_hist
    scale_pos_weight: 1
    seed: ${seed}

catboost:
  n_fold: 5
  feature_cols:
  cat_cols: ${feature.cat_cols}
  label_col:
  pred_col:
  early_stopping_rounds: 200
  verbose_eval: 100
  categorical_features_indices:
  params:
    task_type: GPU
    iterations: 100000
    # max_leaves: 32
    # subsample: 0.8
    # boosting_type: Plain
    loss_function: PairLogit
    eval_metric: PairLogit
    custom_metric: PairLogit
    max_depth: 8
    learning_rate: 0.05
    max_bin: 32
    verbose: 100
    devices: 0:1:2:3
    use_best_model: True
    od_type: Iter
    od_wait: 100
    random_seed: ${seed}
    gpu_ram_part: 0.95
    # bootstrap_type: Poisson

store:
  workdir: /root/workdir
  model_name: stacking_wo_large
  root_path: ${store.workdir}/output/${store.model_name}
  save_path: ${store.workdir}/output/${store.model_name}
  model_path: ${store.workdir}/output/${store.model_name}/model
  log_path: ${store.workdir}/output/${store.model_name}/logs
  result_path: ${store.workdir}/output/${store.model_name}/result
  gcs_path: ${store.model_name}
  save_feature: False

hydra:
  run:
    dir: ${store.save_path}
  job:
    chdir: False
